// -------------------------------------------------------------
// 
// File Name: C:\Users\huber\Downloads\hdlsrc\HDLAWGNGenerator\HDLAWGNGenerator\FunctionEvaluation.v
// Created: 2021-06-06 18:19:42
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FunctionEvaluation
// Source Path: HDLAWGNGenerator/AWGNGenerator/GaussianNoiseWithUnitVar/SqrtImplementation/SqrtEval/FunctionEvaluation
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FunctionEvaluation
          (clk,
           reset,
           enb,
           x_f,
           passIn,
           exp_fIn,
           y_f,
           passOut,
           exp_fOut);


  input   clk;
  input   reset;
  input   enb;
  input   [30:0] x_f;  // ufix31_En24
  input   signed [8:0] passIn;  // sfix9
  input   signed [7:0] exp_fIn;  // int8
  output  [16:0] y_f;  // ufix17_En13
  output  signed [8:0] passOut;  // sfix9
  output  signed [7:0] exp_fOut;  // int8


  reg signed [8:0] Delay3_out1;  // sfix9
  wire [7:0] Constant1_out1;  // uint8
  wire [30:0] Subtract1_sub_cast;  // ufix31_En24
  wire [30:0] Subtract1_out1;  // ufix31_En24
  wire [30:0] x_e;  // ufix31_En19
  wire [7:0] u016;  // uint8
  wire switch_compare_1;
  wire signed [7:0] u016_dtc;  // int8
  wire [7:0] Constant2_out1;  // uint8
  wire signed [7:0] Constant2_out1_dtc;  // int8
  wire signed [7:0] Switch2_out1;  // int8
  reg [30:0] Delay4_out1;  // ufix31_En24
  reg signed [7:0] Delay5_out1;  // int8
  wire [6:0] alpha1_D_Lookup_Table2_k;  // ufix7
  wire signed [12:0] alpha1_D_Lookup_Table2_1 [0:64];  // sfix13_En12 [65]
  wire signed [12:0] c1;  // sfix13_En12
  wire signed [31:0] Product1_cast;  // sfix32_En24
  wire signed [44:0] Product1_mul_temp;  // sfix45_En36
  wire signed [43:0] Product1_out1;  // sfix44_En36
  reg signed [7:0] Delay6_out1;  // int8
  wire [6:0] alpha1_D_Lookup_Table3_k;  // ufix7
  wire signed [20:0] alpha1_D_Lookup_Table3_1 [0:64];  // sfix21_En20 [65]
  wire signed [20:0] c0;  // sfix21_En20
  wire [16:0] Add1_add_cast;  // ufix17_En13
  wire [16:0] Add1_add_cast_1;  // ufix17_En13
  wire [16:0] Add1_out1;  // ufix17_En13
  wire [7:0] Constant_out1;  // uint8
  wire signed [32:0] Subtract_sub_cast;  // sfix33_En24
  wire signed [32:0] Subtract_sub_cast_1;  // sfix33_En24
  wire signed [32:0] Subtract_out1;  // sfix33_En24
  wire signed [32:0] x_e_1;  // sfix33_En18
  wire [7:0] u016_1;  // uint8
  wire switch_compare_1_1;
  wire [7:0] Switch1_out1;  // uint8
  reg [30:0] Delay_out1;  // ufix31_En24
  reg [7:0] Delay1_out1;  // uint8
  wire [6:0] alpha1_D_Lookup_Table_k;  // ufix7
  wire signed [12:0] alpha1_D_Lookup_Table_1 [0:64];  // sfix13_En12 [65]
  wire signed [12:0] c1_1;  // sfix13_En12
  wire signed [31:0] Product_cast;  // sfix32_En24
  wire signed [44:0] Product_mul_temp;  // sfix45_En36
  wire signed [43:0] Product_out1;  // sfix44_En36
  reg [7:0] Delay2_out1;  // uint8
  wire [6:0] alpha1_D_Lookup_Table1_k;  // ufix7
  wire signed [20:0] alpha1_D_Lookup_Table1_1 [0:64];  // sfix21_En20 [65]
  wire signed [20:0] c0_1;  // sfix21_En20
  wire signed [43:0] Add_add_cast;  // sfix44_En36
  wire signed [43:0] Add_add_temp;  // sfix44_En36
  wire [16:0] Add_out1;  // ufix17_En13
  wire [16:0] Switch_out1;  // ufix17_En13
  reg signed [7:0] Delay7_out1;  // int8


  always @(posedge clk or posedge reset)
    begin : Delay3_process
      if (reset == 1'b1) begin
        Delay3_out1 <= 9'sb000000000;
      end
      else begin
        if (enb) begin
          Delay3_out1 <= passIn;
        end
      end
    end



  assign Constant1_out1 = 8'b00000010;



  assign Subtract1_sub_cast = {Constant1_out1[6:0], 24'b000000000000000000000000};
  assign Subtract1_out1 = x_f - Subtract1_sub_cast;



  assign x_e = Subtract1_out1;



  assign u016 = x_e[26:19];



  assign switch_compare_1 = u016 > 8'b00111111;



  assign u016_dtc = u016;



  assign Constant2_out1 = 8'b01000000;



  assign Constant2_out1_dtc = Constant2_out1;



  assign Switch2_out1 = (switch_compare_1 == 1'b0 ? u016_dtc :
              Constant2_out1_dtc);



  always @(posedge clk or posedge reset)
    begin : Delay4_process
      if (reset == 1'b1) begin
        Delay4_out1 <= 31'b0000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          Delay4_out1 <= x_f;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay5_process
      if (reset == 1'b1) begin
        Delay5_out1 <= 8'sb00000000;
      end
      else begin
        if (enb) begin
          Delay5_out1 <= Switch2_out1;
        end
      end
    end



  assign alpha1_D_Lookup_Table2_1[0] = 13'sb0010110100011;
  assign alpha1_D_Lookup_Table2_1[1] = 13'sb0010110010111;
  assign alpha1_D_Lookup_Table2_1[2] = 13'sb0010110001101;
  assign alpha1_D_Lookup_Table2_1[3] = 13'sb0010110000010;
  assign alpha1_D_Lookup_Table2_1[4] = 13'sb0010101111000;
  assign alpha1_D_Lookup_Table2_1[5] = 13'sb0010101101110;
  assign alpha1_D_Lookup_Table2_1[6] = 13'sb0010101100100;
  assign alpha1_D_Lookup_Table2_1[7] = 13'sb0010101011010;
  assign alpha1_D_Lookup_Table2_1[8] = 13'sb0010101010001;
  assign alpha1_D_Lookup_Table2_1[9] = 13'sb0010101000111;
  assign alpha1_D_Lookup_Table2_1[10] = 13'sb0010100111110;
  assign alpha1_D_Lookup_Table2_1[11] = 13'sb0010100110101;
  assign alpha1_D_Lookup_Table2_1[12] = 13'sb0010100101101;
  assign alpha1_D_Lookup_Table2_1[13] = 13'sb0010100100100;
  assign alpha1_D_Lookup_Table2_1[14] = 13'sb0010100011100;
  assign alpha1_D_Lookup_Table2_1[15] = 13'sb0010100010011;
  assign alpha1_D_Lookup_Table2_1[16] = 13'sb0010100001011;
  assign alpha1_D_Lookup_Table2_1[17] = 13'sb0010100000011;
  assign alpha1_D_Lookup_Table2_1[18] = 13'sb0010011111011;
  assign alpha1_D_Lookup_Table2_1[19] = 13'sb0010011110100;
  assign alpha1_D_Lookup_Table2_1[20] = 13'sb0010011101100;
  assign alpha1_D_Lookup_Table2_1[21] = 13'sb0010011100101;
  assign alpha1_D_Lookup_Table2_1[22] = 13'sb0010011011110;
  assign alpha1_D_Lookup_Table2_1[23] = 13'sb0010011010111;
  assign alpha1_D_Lookup_Table2_1[24] = 13'sb0010011001111;
  assign alpha1_D_Lookup_Table2_1[25] = 13'sb0010011001001;
  assign alpha1_D_Lookup_Table2_1[26] = 13'sb0010011000010;
  assign alpha1_D_Lookup_Table2_1[27] = 13'sb0010010111011;
  assign alpha1_D_Lookup_Table2_1[28] = 13'sb0010010110101;
  assign alpha1_D_Lookup_Table2_1[29] = 13'sb0010010101110;
  assign alpha1_D_Lookup_Table2_1[30] = 13'sb0010010101000;
  assign alpha1_D_Lookup_Table2_1[31] = 13'sb0010010100010;
  assign alpha1_D_Lookup_Table2_1[32] = 13'sb0010010011011;
  assign alpha1_D_Lookup_Table2_1[33] = 13'sb0010010010101;
  assign alpha1_D_Lookup_Table2_1[34] = 13'sb0010010001111;
  assign alpha1_D_Lookup_Table2_1[35] = 13'sb0010010001001;
  assign alpha1_D_Lookup_Table2_1[36] = 13'sb0010010000100;
  assign alpha1_D_Lookup_Table2_1[37] = 13'sb0010001111110;
  assign alpha1_D_Lookup_Table2_1[38] = 13'sb0010001111000;
  assign alpha1_D_Lookup_Table2_1[39] = 13'sb0010001110011;
  assign alpha1_D_Lookup_Table2_1[40] = 13'sb0010001101101;
  assign alpha1_D_Lookup_Table2_1[41] = 13'sb0010001101000;
  assign alpha1_D_Lookup_Table2_1[42] = 13'sb0010001100011;
  assign alpha1_D_Lookup_Table2_1[43] = 13'sb0010001011101;
  assign alpha1_D_Lookup_Table2_1[44] = 13'sb0010001011000;
  assign alpha1_D_Lookup_Table2_1[45] = 13'sb0010001010011;
  assign alpha1_D_Lookup_Table2_1[46] = 13'sb0010001001110;
  assign alpha1_D_Lookup_Table2_1[47] = 13'sb0010001001001;
  assign alpha1_D_Lookup_Table2_1[48] = 13'sb0010001000100;
  assign alpha1_D_Lookup_Table2_1[49] = 13'sb0010000111111;
  assign alpha1_D_Lookup_Table2_1[50] = 13'sb0010000111011;
  assign alpha1_D_Lookup_Table2_1[51] = 13'sb0010000110110;
  assign alpha1_D_Lookup_Table2_1[52] = 13'sb0010000110001;
  assign alpha1_D_Lookup_Table2_1[53] = 13'sb0010000101101;
  assign alpha1_D_Lookup_Table2_1[54] = 13'sb0010000101000;
  assign alpha1_D_Lookup_Table2_1[55] = 13'sb0010000100100;
  assign alpha1_D_Lookup_Table2_1[56] = 13'sb0010000011111;
  assign alpha1_D_Lookup_Table2_1[57] = 13'sb0010000011011;
  assign alpha1_D_Lookup_Table2_1[58] = 13'sb0010000010111;
  assign alpha1_D_Lookup_Table2_1[59] = 13'sb0010000010010;
  assign alpha1_D_Lookup_Table2_1[60] = 13'sb0010000001110;
  assign alpha1_D_Lookup_Table2_1[61] = 13'sb0010000001010;
  assign alpha1_D_Lookup_Table2_1[62] = 13'sb0010000000110;
  assign alpha1_D_Lookup_Table2_1[63] = 13'sb0010000000010;
  assign alpha1_D_Lookup_Table2_1[64] = 13'sb0000000000000;
  assign alpha1_D_Lookup_Table2_k = (Delay5_out1 <= 8'sb00000000 ? 7'b0000000 :
              (Delay5_out1 >= 8'sb01000000 ? 7'b1000000 :
              Delay5_out1[6:0]));
  assign c1 = alpha1_D_Lookup_Table2_1[alpha1_D_Lookup_Table2_k];



  assign Product1_cast = {1'b0, Delay4_out1};
  assign Product1_mul_temp = Product1_cast * c1;
  assign Product1_out1 = Product1_mul_temp[43:0];



  always @(posedge clk or posedge reset)
    begin : Delay6_process
      if (reset == 1'b1) begin
        Delay6_out1 <= 8'sb00000000;
      end
      else begin
        if (enb) begin
          Delay6_out1 <= Switch2_out1;
        end
      end
    end



  assign alpha1_D_Lookup_Table3_1[0] = 21'sb010110101101110010011;
  assign alpha1_D_Lookup_Table3_1[1] = 21'sb010110111001000000111;
  assign alpha1_D_Lookup_Table3_1[2] = 21'sb010111000100001001111;
  assign alpha1_D_Lookup_Table3_1[3] = 21'sb010111001111001101101;
  assign alpha1_D_Lookup_Table3_1[4] = 21'sb010111011010001100001;
  assign alpha1_D_Lookup_Table3_1[5] = 21'sb010111100101000101100;
  assign alpha1_D_Lookup_Table3_1[6] = 21'sb010111101111111001111;
  assign alpha1_D_Lookup_Table3_1[7] = 21'sb010111111010101001011;
  assign alpha1_D_Lookup_Table3_1[8] = 21'sb011000000101010100000;
  assign alpha1_D_Lookup_Table3_1[9] = 21'sb011000001111111010000;
  assign alpha1_D_Lookup_Table3_1[10] = 21'sb011000011010011011011;
  assign alpha1_D_Lookup_Table3_1[11] = 21'sb011000100100111000010;
  assign alpha1_D_Lookup_Table3_1[12] = 21'sb011000101111010000110;
  assign alpha1_D_Lookup_Table3_1[13] = 21'sb011000111001100100111;
  assign alpha1_D_Lookup_Table3_1[14] = 21'sb011001000011110100110;
  assign alpha1_D_Lookup_Table3_1[15] = 21'sb011001001110000000100;
  assign alpha1_D_Lookup_Table3_1[16] = 21'sb011001011000001000010;
  assign alpha1_D_Lookup_Table3_1[17] = 21'sb011001100010001011111;
  assign alpha1_D_Lookup_Table3_1[18] = 21'sb011001101100001011100;
  assign alpha1_D_Lookup_Table3_1[19] = 21'sb011001110110000111011;
  assign alpha1_D_Lookup_Table3_1[20] = 21'sb011001111111111111011;
  assign alpha1_D_Lookup_Table3_1[21] = 21'sb011010001001110011110;
  assign alpha1_D_Lookup_Table3_1[22] = 21'sb011010010011100100011;
  assign alpha1_D_Lookup_Table3_1[23] = 21'sb011010011101010001011;
  assign alpha1_D_Lookup_Table3_1[24] = 21'sb011010100110111010111;
  assign alpha1_D_Lookup_Table3_1[25] = 21'sb011010110000100001000;
  assign alpha1_D_Lookup_Table3_1[26] = 21'sb011010111010000011100;
  assign alpha1_D_Lookup_Table3_1[27] = 21'sb011011000011100010110;
  assign alpha1_D_Lookup_Table3_1[28] = 21'sb011011001100111110110;
  assign alpha1_D_Lookup_Table3_1[29] = 21'sb011011010110010111011;
  assign alpha1_D_Lookup_Table3_1[30] = 21'sb011011011111101100111;
  assign alpha1_D_Lookup_Table3_1[31] = 21'sb011011101000111111010;
  assign alpha1_D_Lookup_Table3_1[32] = 21'sb011011110010001110011;
  assign alpha1_D_Lookup_Table3_1[33] = 21'sb011011111011011010101;
  assign alpha1_D_Lookup_Table3_1[34] = 21'sb011100000100100011110;
  assign alpha1_D_Lookup_Table3_1[35] = 21'sb011100001101101001111;
  assign alpha1_D_Lookup_Table3_1[36] = 21'sb011100010110101101010;
  assign alpha1_D_Lookup_Table3_1[37] = 21'sb011100011111101101101;
  assign alpha1_D_Lookup_Table3_1[38] = 21'sb011100101000101011001;
  assign alpha1_D_Lookup_Table3_1[39] = 21'sb011100110001100101111;
  assign alpha1_D_Lookup_Table3_1[40] = 21'sb011100111010011110000;
  assign alpha1_D_Lookup_Table3_1[41] = 21'sb011101000011010011010;
  assign alpha1_D_Lookup_Table3_1[42] = 21'sb011101001100000101111;
  assign alpha1_D_Lookup_Table3_1[43] = 21'sb011101010100110101111;
  assign alpha1_D_Lookup_Table3_1[44] = 21'sb011101011101100011010;
  assign alpha1_D_Lookup_Table3_1[45] = 21'sb011101100110001110001;
  assign alpha1_D_Lookup_Table3_1[46] = 21'sb011101101110110110100;
  assign alpha1_D_Lookup_Table3_1[47] = 21'sb011101110111011100010;
  assign alpha1_D_Lookup_Table3_1[48] = 21'sb011101111111111111101;
  assign alpha1_D_Lookup_Table3_1[49] = 21'sb011110001000100000100;
  assign alpha1_D_Lookup_Table3_1[50] = 21'sb011110010000111111001;
  assign alpha1_D_Lookup_Table3_1[51] = 21'sb011110011001011011010;
  assign alpha1_D_Lookup_Table3_1[52] = 21'sb011110100001110101001;
  assign alpha1_D_Lookup_Table3_1[53] = 21'sb011110101010001100101;
  assign alpha1_D_Lookup_Table3_1[54] = 21'sb011110110010100001111;
  assign alpha1_D_Lookup_Table3_1[55] = 21'sb011110111010110100111;
  assign alpha1_D_Lookup_Table3_1[56] = 21'sb011111000011000101110;
  assign alpha1_D_Lookup_Table3_1[57] = 21'sb011111001011010100010;
  assign alpha1_D_Lookup_Table3_1[58] = 21'sb011111010011100000110;
  assign alpha1_D_Lookup_Table3_1[59] = 21'sb011111011011101011000;
  assign alpha1_D_Lookup_Table3_1[60] = 21'sb011111100011110011010;
  assign alpha1_D_Lookup_Table3_1[61] = 21'sb011111101011111001011;
  assign alpha1_D_Lookup_Table3_1[62] = 21'sb011111110011111101011;
  assign alpha1_D_Lookup_Table3_1[63] = 21'sb011111111011111111011;
  assign alpha1_D_Lookup_Table3_1[64] = 21'sb000000000000000000000;
  assign alpha1_D_Lookup_Table3_k = (Delay6_out1 <= 8'sb00000000 ? 7'b0000000 :
              (Delay6_out1 >= 8'sb01000000 ? 7'b1000000 :
              Delay6_out1[6:0]));
  assign c0 = alpha1_D_Lookup_Table3_1[alpha1_D_Lookup_Table3_k];



  assign Add1_add_cast = Product1_out1[39:23];
  assign Add1_add_cast_1 = {{3{c0[20]}}, c0[20:7]};
  assign Add1_out1 = Add1_add_cast + Add1_add_cast_1;



  assign Constant_out1 = 8'b00000001;



  assign Subtract_sub_cast = {2'b0, x_f};
  assign Subtract_sub_cast_1 = {1'b0, {Constant_out1, 24'b000000000000000000000000}};
  assign Subtract_out1 = Subtract_sub_cast - Subtract_sub_cast_1;



  assign x_e_1 = Subtract_out1;



  assign u016_1 = x_e_1[25:18];



  assign switch_compare_1_1 = u016_1 > 8'b00111111;



  assign Switch1_out1 = (switch_compare_1_1 == 1'b0 ? u016_1 :
              Constant2_out1);



  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 31'b0000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          Delay_out1 <= x_f;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= Switch1_out1;
        end
      end
    end



  assign alpha1_D_Lookup_Table_1[0] = 13'sb0011111111000;
  assign alpha1_D_Lookup_Table_1[1] = 13'sb0011111101000;
  assign alpha1_D_Lookup_Table_1[2] = 13'sb0011111011001;
  assign alpha1_D_Lookup_Table_1[3] = 13'sb0011111001010;
  assign alpha1_D_Lookup_Table_1[4] = 13'sb0011110111100;
  assign alpha1_D_Lookup_Table_1[5] = 13'sb0011110101101;
  assign alpha1_D_Lookup_Table_1[6] = 13'sb0011110011111;
  assign alpha1_D_Lookup_Table_1[7] = 13'sb0011110010010;
  assign alpha1_D_Lookup_Table_1[8] = 13'sb0011110000100;
  assign alpha1_D_Lookup_Table_1[9] = 13'sb0011101110111;
  assign alpha1_D_Lookup_Table_1[10] = 13'sb0011101101010;
  assign alpha1_D_Lookup_Table_1[11] = 13'sb0011101011110;
  assign alpha1_D_Lookup_Table_1[12] = 13'sb0011101010001;
  assign alpha1_D_Lookup_Table_1[13] = 13'sb0011101000101;
  assign alpha1_D_Lookup_Table_1[14] = 13'sb0011100111001;
  assign alpha1_D_Lookup_Table_1[15] = 13'sb0011100101110;
  assign alpha1_D_Lookup_Table_1[16] = 13'sb0011100100010;
  assign alpha1_D_Lookup_Table_1[17] = 13'sb0011100010111;
  assign alpha1_D_Lookup_Table_1[18] = 13'sb0011100001100;
  assign alpha1_D_Lookup_Table_1[19] = 13'sb0011100000001;
  assign alpha1_D_Lookup_Table_1[20] = 13'sb0011011110110;
  assign alpha1_D_Lookup_Table_1[21] = 13'sb0011011101100;
  assign alpha1_D_Lookup_Table_1[22] = 13'sb0011011100010;
  assign alpha1_D_Lookup_Table_1[23] = 13'sb0011011011000;
  assign alpha1_D_Lookup_Table_1[24] = 13'sb0011011001110;
  assign alpha1_D_Lookup_Table_1[25] = 13'sb0011011000100;
  assign alpha1_D_Lookup_Table_1[26] = 13'sb0011010111010;
  assign alpha1_D_Lookup_Table_1[27] = 13'sb0011010110001;
  assign alpha1_D_Lookup_Table_1[28] = 13'sb0011010101000;
  assign alpha1_D_Lookup_Table_1[29] = 13'sb0011010011110;
  assign alpha1_D_Lookup_Table_1[30] = 13'sb0011010010101;
  assign alpha1_D_Lookup_Table_1[31] = 13'sb0011010001101;
  assign alpha1_D_Lookup_Table_1[32] = 13'sb0011010000100;
  assign alpha1_D_Lookup_Table_1[33] = 13'sb0011001111011;
  assign alpha1_D_Lookup_Table_1[34] = 13'sb0011001110011;
  assign alpha1_D_Lookup_Table_1[35] = 13'sb0011001101011;
  assign alpha1_D_Lookup_Table_1[36] = 13'sb0011001100010;
  assign alpha1_D_Lookup_Table_1[37] = 13'sb0011001011010;
  assign alpha1_D_Lookup_Table_1[38] = 13'sb0011001010010;
  assign alpha1_D_Lookup_Table_1[39] = 13'sb0011001001010;
  assign alpha1_D_Lookup_Table_1[40] = 13'sb0011001000011;
  assign alpha1_D_Lookup_Table_1[41] = 13'sb0011000111011;
  assign alpha1_D_Lookup_Table_1[42] = 13'sb0011000110100;
  assign alpha1_D_Lookup_Table_1[43] = 13'sb0011000101100;
  assign alpha1_D_Lookup_Table_1[44] = 13'sb0011000100101;
  assign alpha1_D_Lookup_Table_1[45] = 13'sb0011000011110;
  assign alpha1_D_Lookup_Table_1[46] = 13'sb0011000010111;
  assign alpha1_D_Lookup_Table_1[47] = 13'sb0011000010000;
  assign alpha1_D_Lookup_Table_1[48] = 13'sb0011000001001;
  assign alpha1_D_Lookup_Table_1[49] = 13'sb0011000000010;
  assign alpha1_D_Lookup_Table_1[50] = 13'sb0010111111011;
  assign alpha1_D_Lookup_Table_1[51] = 13'sb0010111110101;
  assign alpha1_D_Lookup_Table_1[52] = 13'sb0010111101110;
  assign alpha1_D_Lookup_Table_1[53] = 13'sb0010111100111;
  assign alpha1_D_Lookup_Table_1[54] = 13'sb0010111100001;
  assign alpha1_D_Lookup_Table_1[55] = 13'sb0010111011011;
  assign alpha1_D_Lookup_Table_1[56] = 13'sb0010111010101;
  assign alpha1_D_Lookup_Table_1[57] = 13'sb0010111001110;
  assign alpha1_D_Lookup_Table_1[58] = 13'sb0010111001000;
  assign alpha1_D_Lookup_Table_1[59] = 13'sb0010111000010;
  assign alpha1_D_Lookup_Table_1[60] = 13'sb0010110111100;
  assign alpha1_D_Lookup_Table_1[61] = 13'sb0010110110111;
  assign alpha1_D_Lookup_Table_1[62] = 13'sb0010110110001;
  assign alpha1_D_Lookup_Table_1[63] = 13'sb0010110101011;
  assign alpha1_D_Lookup_Table_1[64] = 13'sb0000000000000;
  assign alpha1_D_Lookup_Table_k = (Delay1_out1 == 8'b00000000 ? 7'b0000000 :
              (Delay1_out1 >= 8'b01000000 ? 7'b1000000 :
              Delay1_out1[6:0]));
  assign c1_1 = alpha1_D_Lookup_Table_1[alpha1_D_Lookup_Table_k];



  assign Product_cast = {1'b0, Delay_out1};
  assign Product_mul_temp = Product_cast * c1_1;
  assign Product_out1 = Product_mul_temp[43:0];



  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= Switch1_out1;
        end
      end
    end



  assign alpha1_D_Lookup_Table1_1[0] = 21'sb010000000011111110111;
  assign alpha1_D_Lookup_Table1_1[1] = 21'sb010000001011111011000;
  assign alpha1_D_Lookup_Table1_1[2] = 21'sb010000010011110011001;
  assign alpha1_D_Lookup_Table1_1[3] = 21'sb010000011011100111101;
  assign alpha1_D_Lookup_Table1_1[4] = 21'sb010000100011011000010;
  assign alpha1_D_Lookup_Table1_1[5] = 21'sb010000101011000101011;
  assign alpha1_D_Lookup_Table1_1[6] = 21'sb010000110010101111000;
  assign alpha1_D_Lookup_Table1_1[7] = 21'sb010000111010010101001;
  assign alpha1_D_Lookup_Table1_1[8] = 21'sb010001000001110111111;
  assign alpha1_D_Lookup_Table1_1[9] = 21'sb010001001001010111010;
  assign alpha1_D_Lookup_Table1_1[10] = 21'sb010001010000110011011;
  assign alpha1_D_Lookup_Table1_1[11] = 21'sb010001011000001100011;
  assign alpha1_D_Lookup_Table1_1[12] = 21'sb010001011111100010010;
  assign alpha1_D_Lookup_Table1_1[13] = 21'sb010001100110110101000;
  assign alpha1_D_Lookup_Table1_1[14] = 21'sb010001101110000100111;
  assign alpha1_D_Lookup_Table1_1[15] = 21'sb010001110101010001101;
  assign alpha1_D_Lookup_Table1_1[16] = 21'sb010001111100011011101;
  assign alpha1_D_Lookup_Table1_1[17] = 21'sb010010000011100010110;
  assign alpha1_D_Lookup_Table1_1[18] = 21'sb010010001010100111001;
  assign alpha1_D_Lookup_Table1_1[19] = 21'sb010010010001101000110;
  assign alpha1_D_Lookup_Table1_1[20] = 21'sb010010011000100111101;
  assign alpha1_D_Lookup_Table1_1[21] = 21'sb010010011111100011111;
  assign alpha1_D_Lookup_Table1_1[22] = 21'sb010010100110011101101;
  assign alpha1_D_Lookup_Table1_1[23] = 21'sb010010101101010100110;
  assign alpha1_D_Lookup_Table1_1[24] = 21'sb010010110100001001011;
  assign alpha1_D_Lookup_Table1_1[25] = 21'sb010010111010111011101;
  assign alpha1_D_Lookup_Table1_1[26] = 21'sb010011000001101011011;
  assign alpha1_D_Lookup_Table1_1[27] = 21'sb010011001000011000110;
  assign alpha1_D_Lookup_Table1_1[28] = 21'sb010011001111000011110;
  assign alpha1_D_Lookup_Table1_1[29] = 21'sb010011010101101100100;
  assign alpha1_D_Lookup_Table1_1[30] = 21'sb010011011100010011000;
  assign alpha1_D_Lookup_Table1_1[31] = 21'sb010011100010110111010;
  assign alpha1_D_Lookup_Table1_1[32] = 21'sb010011101001011001010;
  assign alpha1_D_Lookup_Table1_1[33] = 21'sb010011101111111001001;
  assign alpha1_D_Lookup_Table1_1[34] = 21'sb010011110110010111000;
  assign alpha1_D_Lookup_Table1_1[35] = 21'sb010011111100110010101;
  assign alpha1_D_Lookup_Table1_1[36] = 21'sb010100000011001100010;
  assign alpha1_D_Lookup_Table1_1[37] = 21'sb010100001001100011110;
  assign alpha1_D_Lookup_Table1_1[38] = 21'sb010100001111111001011;
  assign alpha1_D_Lookup_Table1_1[39] = 21'sb010100010110001101000;
  assign alpha1_D_Lookup_Table1_1[40] = 21'sb010100011100011110101;
  assign alpha1_D_Lookup_Table1_1[41] = 21'sb010100100010101110011;
  assign alpha1_D_Lookup_Table1_1[42] = 21'sb010100101000111100010;
  assign alpha1_D_Lookup_Table1_1[43] = 21'sb010100101111001000001;
  assign alpha1_D_Lookup_Table1_1[44] = 21'sb010100110101010010011;
  assign alpha1_D_Lookup_Table1_1[45] = 21'sb010100111011011010101;
  assign alpha1_D_Lookup_Table1_1[46] = 21'sb010101000001100001010;
  assign alpha1_D_Lookup_Table1_1[47] = 21'sb010101000111100110000;
  assign alpha1_D_Lookup_Table1_1[48] = 21'sb010101001101101001000;
  assign alpha1_D_Lookup_Table1_1[49] = 21'sb010101010011101010011;
  assign alpha1_D_Lookup_Table1_1[50] = 21'sb010101011001101010000;
  assign alpha1_D_Lookup_Table1_1[51] = 21'sb010101011111100111111;
  assign alpha1_D_Lookup_Table1_1[52] = 21'sb010101100101100100010;
  assign alpha1_D_Lookup_Table1_1[53] = 21'sb010101101011011110111;
  assign alpha1_D_Lookup_Table1_1[54] = 21'sb010101110001011000000;
  assign alpha1_D_Lookup_Table1_1[55] = 21'sb010101110111001111100;
  assign alpha1_D_Lookup_Table1_1[56] = 21'sb010101111101000101011;
  assign alpha1_D_Lookup_Table1_1[57] = 21'sb010110000010111001110;
  assign alpha1_D_Lookup_Table1_1[58] = 21'sb010110001000101100101;
  assign alpha1_D_Lookup_Table1_1[59] = 21'sb010110001110011101111;
  assign alpha1_D_Lookup_Table1_1[60] = 21'sb010110010100001101110;
  assign alpha1_D_Lookup_Table1_1[61] = 21'sb010110011001111100001;
  assign alpha1_D_Lookup_Table1_1[62] = 21'sb010110011111101001000;
  assign alpha1_D_Lookup_Table1_1[63] = 21'sb010110100101010100100;
  assign alpha1_D_Lookup_Table1_1[64] = 21'sb000000000000000000000;
  assign alpha1_D_Lookup_Table1_k = (Delay2_out1 == 8'b00000000 ? 7'b0000000 :
              (Delay2_out1 >= 8'b01000000 ? 7'b1000000 :
              Delay2_out1[6:0]));
  assign c0_1 = alpha1_D_Lookup_Table1_1[alpha1_D_Lookup_Table1_k];



  assign Add_add_cast = {{7{c0_1[20]}}, {c0_1, 16'b0000000000000000}};
  assign Add_add_temp = Product_out1 + Add_add_cast;
  assign Add_out1 = Add_add_temp[39:23];



  assign Switch_out1 = (Delay3_out1 == 9'sb000000000 ? Add1_out1 :
              Add_out1);



  assign y_f = Switch_out1;

  assign passOut = Delay3_out1;

  always @(posedge clk or posedge reset)
    begin : Delay7_process
      if (reset == 1'b1) begin
        Delay7_out1 <= 8'sb00000000;
      end
      else begin
        if (enb) begin
          Delay7_out1 <= exp_fIn;
        end
      end
    end



  assign exp_fOut = Delay7_out1;

endmodule  // FunctionEvaluation

